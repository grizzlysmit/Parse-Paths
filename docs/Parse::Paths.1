.pc
.TH Paths.rakumod 1 2023-12-15
.SS Table of Contents
.IP \(bu 2m
NAME [#name]
.IP \(bu 2m
AUTHOR [#author]
.IP \(bu 2m
VERSION [#version]
.IP \(bu 2m
TITLE [#title]
.IP \(bu 2m
SUBTITLE [#subtitle]
.IP \(bu 2m
COPYRIGHT [#copyright]
.IP \(bu 2m
Introduction [#introduction]
.RS 2n
.IP \(bu 2m
Motivations [#motivations]
.RE
.SH "NAME"
Gzz::Text::Utils 
.SH "AUTHOR"
Francis Grizzly Smit (grizzly@smit\&.id\&.au)
.SH "VERSION"
v0\&.1\&.0
.SH "TITLE"
Gzz::Text::Utils
.SH "SUBTITLE"
A Raku module to provide text formatting services to Raku programs\&.
.SH "COPYRIGHT"
LGPL V3\&.0+ LICENSE [https://github.com/grizzlysmit/Parse-Paths/blob/main/LICENSE]
.SH Introduction

A Raku module to provide text formatting services to Raku programs\&.

Including a sprintf front\-end Sprintf that copes better with Ansi highlighted text and implements \fB%U\fR and does octal as \fB0o123\fR or \fB0O123\fR if you choose \fB%O\fR as I hate ambiguity like \fB0123\fR is it an int with leading zeros or an octal number\&. Also there is \fB%N\fR for a new line and \fB%T\fR for a tab helpful when you want to use single quotes to stop the \fB<num> $\fR specs needing back slashes\&.

And a \fBprintf\fR alike \fBPrintf\fR\&.

Also it does centring and there is a \fBmax\-width\fR field in the \fB%\fR spec i\&.e\&. \fB%*\&.*\&.*E\fR, and more\&.

Top of Document [#table-of-contents]
.SS Motivations

When you embed formatting information into your text such as \fBbold\fR, \fIitalics\fR, etc \&.\&.\&. and \fBcolours\fR standard text formatting will not work e\&.g\&. printf, sprintf etc also those functions don't do centring\&.

Another important thing to note is that even these functions will fail if you include such formatting in the \fBtext\fR field unless you supply a copy of the text with out the formatting characters in it in the \fB:ref\fR field i\&.e\&. \fBleft($formatted\-text, $width, :ref($unformatted\-text))\fR or \fBtext($formatted\-text, $width, :$ref)\fR if the reference text is in a variable called \fB$ref\fR or you can write it as \fBleft($formatted\-text, $width, ref => $unformatted\-text)\fR

Top of Document [#able-of-contents]
.SS Update

Fixed the proto type of \fBleft\fR etc is now 

.RS 4m
.EX
sub left(Str:D $text, Int:D $width is copy, Str:D $fill = ' ',
            :&number\-of\-chars:(Int:D, Int:D \-\-> Bool:D) = &left\-global\-number\-of\-chars,
               Str:D :$ref = strip\-ansi($text), Int:D
                                :$max\-width = 0, Str:D :$ellipsis = '' \-\-> Str) is export 

.EE
.RE
.P
Where \fBsub strip\-ansi(Str:D $text \-\-> Str:D) is export\fR is my new function for striping out ANSI escape sequences so we don't need to supply \fB:$ref\fR unless it contains codes that \fBsub strip\-ansi(Str:D $text \-\-> Str:D) is export\fR cannot strip out, if so I would like to know so I can update it to cope with these new codes\&.

Top of Document [#table-of-contents]
